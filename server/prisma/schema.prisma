generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  name             String
  createdAt        DateTime?       @updatedAt
  email            String
  isCreator        Boolean?
  preference       Json?
  role             Role            @default(BASIC)
  userPreferenceId String?         @unique
  writtenPosts     Post[]          @relation("WrittenPosts")
  favPosts         Post[]          @relation("FavPosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])

  @@unique([name, email])
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User?
}

model Post {
  id          String     @id @default(uuid())
  title       String
  location    String
  date        String
  description String
  authorId    String
  favId       String?
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  author      User       @relation("WrittenPosts", fields: [authorId], references: [id])
  favBy       User?      @relation("FavPosts", fields: [favId], references: [id])
  categories  Category[] @relation("CategoryToPost")
}

model Category {
  id    String @id @default(uuid())
  posts Post[] @relation("CategoryToPost")
}

model Book {
  id               String   @id @default(uuid())
  title            String
  author           String
  price            Decimal
  dimensions       String[]
  materials        String?
  publisher        String?
  description      String
  reference        String?
  inner_page_photo String?
  pages            Int?
}

enum Role {
  BASIC
  ADMIN
  CREATOR
}

enum GENRES {
  Other
}

enum TYPE {
  Magazines
  Zines
  Type_Specimens_ @map("Type Specimens ")
}
